{"version":3,"file":"hover-effect.modern.mjs","sources":["../src/hover-effect.js"],"sourcesContent":["import * as THREE from \"three\";\nimport gsap from \"gsap\";\n\nexport default function(opts) {\n  var vertex = `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n\n  var fragment = `\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n`;\n\n  // please respect authorship and do not remove\n  console.log(\n    \"%c Hover effect by Robin Delaporte: https://github.com/robin-dela/hover-effect \",\n    \"color: #bada55; font-size: 0.8rem\"\n  );\n\n  function firstDefined() {\n    for (var i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== undefined) return arguments[i];\n    }\n  }\n\n  var parent = opts.parent;\n  var dispImage = opts.displacementImage;\n  var image1 = opts.image1;\n  var image2 = opts.image2;\n  var imagesRatio = firstDefined(opts.imagesRatio, 1.0);\n  var intensity1 = firstDefined(opts.intensity1, opts.intensity, 1);\n  var intensity2 = firstDefined(opts.intensity2, opts.intensity, 1);\n  var commonAngle = firstDefined(opts.angle, Math.PI / 4); // 45 degrees by default, so grayscale images work correctly\n  var angle1 = firstDefined(opts.angle1, commonAngle);\n  var angle2 = firstDefined(opts.angle2, -commonAngle * 3);\n  var speedIn = firstDefined(opts.speedIn, opts.speed, 1.6);\n  var speedOut = firstDefined(opts.speedOut, opts.speed, 1.2);\n  var userHover = firstDefined(opts.hover, true);\n  var easing = firstDefined(opts.easing, \"expo.out\");\n  var video = firstDefined(opts.video, false);\n\n  if (!parent) {\n    console.warn(\"Parent missing\");\n    return;\n  }\n\n  if (!(image1 && image2 && dispImage)) {\n    console.warn(\"One or more images are missing\");\n    return;\n  }\n\n  var scene = new THREE.Scene();\n  var camera = new THREE.OrthographicCamera(\n    parent.offsetWidth / -2,\n    parent.offsetWidth / 2,\n    parent.offsetHeight / 2,\n    parent.offsetHeight / -2,\n    1,\n    1000\n  );\n\n  camera.position.z = 1;\n\n  var renderer = new THREE.WebGLRenderer({\n    antialias: false,\n    alpha: true\n  });\n\n  renderer.setPixelRatio(2.0);\n  renderer.setClearColor(0xffffff, 0.0);\n  renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n  parent.appendChild(renderer.domElement);\n\n  var render = function() {\n    // This will be called by the TextureLoader as well as Gsap.\n    renderer.render(scene, camera);\n  };\n\n  var loader = new THREE.TextureLoader();\n  loader.crossOrigin = \"\";\n\n  var disp = loader.load(dispImage, render);\n  disp.magFilter = disp.minFilter = THREE.LinearFilter;\n\n  if (video) {\n    let frame = 0;\n    var animate = function() {\n      requestAnimationFrame(animate);\n\n      frame++; // フレーム数をインクリメント\n\n      // フレーム数が２で割り切れなければ描画しない (60fpsを30fpsにする)\n      if (frame % 2 == 0) {\n        return;\n      }\n\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    var video = document.createElement(\"video\");\n    video.autoplay = true;\n    video.loop = true;\n    video.muted = true;\n    video.src = image1;\n    video.load();\n\n    var video2 = document.createElement(\"video\");\n    video2.autoplay = true;\n    video2.loop = true;\n    video2.muted = true;\n    video2.src = image2;\n    video2.load();\n\n    var texture1 = new THREE.VideoTexture(video);\n    var texture2 = new THREE.VideoTexture(video2);\n    texture1.magFilter = texture2.magFilter = THREE.LinearFilter;\n    texture1.minFilter = texture2.minFilter = THREE.LinearFilter;\n\n    video2.addEventListener(\n      \"loadeddata\",\n      function() {\n        video2.play();\n\n        texture2 = new THREE.VideoTexture(video2);\n        texture2.magFilter = THREE.LinearFilter;\n        texture2.minFilter = THREE.LinearFilter;\n\n        mat.uniforms.texture2.value = texture2;\n      },\n      false\n    );\n\n    video.addEventListener(\n      \"loadeddata\",\n      function() {\n        video.play();\n\n        texture1 = new THREE.VideoTexture(video);\n\n        texture1.magFilter = THREE.LinearFilter;\n        texture1.minFilter = THREE.LinearFilter;\n\n        mat.uniforms.texture1.value = texture1;\n      },\n      false\n    );\n  } else {\n    var texture1 = loader.load(image1, render);\n    var texture2 = loader.load(image2, render);\n\n    texture1.magFilter = texture2.magFilter = THREE.LinearFilter;\n    texture1.minFilter = texture2.minFilter = THREE.LinearFilter;\n  }\n\n  let a1, a2;\n  var imageAspect = imagesRatio;\n  if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n    a1 = 1;\n    a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n  } else {\n    a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n    a2 = 1;\n  }\n\n  var mat = new THREE.ShaderMaterial({\n    uniforms: {\n      intensity1: {\n        type: \"f\",\n        value: intensity1\n      },\n      intensity2: {\n        type: \"f\",\n        value: intensity2\n      },\n      dispFactor: {\n        type: \"f\",\n        value: 0.0\n      },\n      angle1: {\n        type: \"f\",\n        value: angle1\n      },\n      angle2: {\n        type: \"f\",\n        value: angle2\n      },\n      texture1: {\n        type: \"t\",\n        value: texture1\n      },\n      texture2: {\n        type: \"t\",\n        value: texture2\n      },\n      disp: {\n        type: \"t\",\n        value: disp\n      },\n      res: {\n        type: \"vec4\",\n        value: new THREE.Vector4(\n          parent.offsetWidth,\n          parent.offsetHeight,\n          a1,\n          a2\n        )\n      },\n      dpr: {\n        type: \"f\",\n        value: window.devicePixelRatio\n      }\n    },\n\n    vertexShader: vertex,\n    fragmentShader: fragment,\n    transparent: true,\n    opacity: 1.0\n  });\n\n  var geometry = new THREE.PlaneGeometry(\n    parent.offsetWidth,\n    parent.offsetHeight,\n    1\n  );\n  var object = new THREE.Mesh(geometry, mat);\n  scene.add(object);\n\n  function transitionIn() {\n    gsap.to(mat.uniforms.dispFactor, {\n      duration: speedIn,\n      value: 1,\n      ease: easing,\n      onUpdate: render,\n      onComplete: render\n    });\n  }\n\n  function transitionOut() {\n    gsap.to(mat.uniforms.dispFactor, {\n      duration: speedOut,\n      value: 0,\n      ease: easing,\n      onUpdate: render,\n      onComplete: render\n    });\n  }\n\n  if (userHover) {\n    parent.addEventListener(\"mouseenter\", transitionIn);\n    parent.addEventListener(\"touchstart\", transitionIn);\n    parent.addEventListener(\"mouseleave\", transitionOut);\n    parent.addEventListener(\"touchend\", transitionOut);\n  }\n\n  window.addEventListener(\"resize\", function(e) {\n    if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n      a1 = 1;\n      a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n    } else {\n      a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n      a2 = 1;\n    }\n    object.material.uniforms.res.value = new THREE.Vector4(\n      parent.offsetWidth,\n      parent.offsetHeight,\n      a1,\n      a2\n    );\n    renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n\n    render();\n  });\n\n  this.next = transitionIn;\n  this.previous = transitionOut;\n}\n"],"names":["opts","firstDefined","i","arguments","length","undefined","console","log","parent","displacementImage","image1","image2","imagesRatio","intensity1","intensity","intensity2","commonAngle","angle","Math","PI","angle1","angle2","speedIn","speed","speedOut","userHover","hover","easing","video","warn","dispImage","scene","THREE","Scene","camera","OrthographicCamera","offsetWidth","offsetHeight","position","z","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","setClearColor","setSize","appendChild","domElement","render","loader","TextureLoader","crossOrigin","disp","load","magFilter","minFilter","LinearFilter","animate","requestAnimationFrame","frame","document","createElement","autoplay","loop","muted","src","video2","texture1","VideoTexture","texture2","addEventListener","play","mat","uniforms","value","a1","a2","imageAspect","ShaderMaterial","type","dispFactor","res","Vector4","dpr","window","devicePixelRatio","vertexShader","fragmentShader","transparent","opacity","geometry","PlaneGeometry","object","Mesh","transitionIn","gsap","to","duration","ease","onUpdate","onComplete","add","transitionOut","e","material","this","next","previous"],"mappings":"4CAGwBA,SAAAA,EAAAA,GAqDtB,SAASC,IACP,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IACpC,QAAqBG,IAAjBF,UAAUD,GAAkB,OAAgBC,UAACD,EAErD,CATAI,QAAQC,IACN,kFACA,qCASF,IAAUC,EAAGR,EAAKQ,SACFR,EAAKS,kBACjBC,EAASV,EAAKU,OACdC,EAASX,EAAKW,OACHC,EAAGX,EAAaD,EAAKY,YAAa,GAC7CC,EAAaZ,EAAaD,EAAKa,WAAYb,EAAKc,UAAW,KAC9Cb,EAAaD,EAAKe,WAAYf,EAAKc,UAAW,GAC3DE,EAAcf,EAAaD,EAAKiB,MAAOC,KAAKC,GAAK,GAC3CC,EAAGnB,EAAaD,EAAKoB,OAAQJ,KAC1Bf,EAAaD,EAAKqB,OAAuB,GAAdL,GAC7BM,EAAGrB,EAAaD,EAAKsB,QAAStB,EAAKuB,MAAO,KACjDC,EAAWvB,EAAaD,EAAKwB,SAAUxB,EAAKuB,MAAO,KAC1CE,EAAGxB,EAAaD,EAAK0B,OAAO,GAC/BC,EAAG1B,EAAaD,EAAK2B,OAAQ,YAC9BC,EAAG3B,EAAaD,EAAK4B,OAAO,GAErC,IAAKpB,EAEH,YADAF,QAAQuB,KAAK,kBAIf,KAAMnB,GAAUC,GAAUmB,GAExB,YADAxB,QAAQuB,KAAK,kCAIf,IAAIE,EAAQ,IAAIC,EAAMC,MAClBC,EAAS,IAASF,EAACG,mBACrB3B,EAAO4B,aAAe,EACtB5B,EAAO4B,YAAc,EACrB5B,EAAO6B,aAAe,EACtB7B,EAAO6B,cAAgB,EACvB,EACA,KAGFH,EAAOI,SAASC,EAAI,EAEpB,IAAYC,EAAG,IAAIR,EAAMS,cAAc,CACrCC,WAAW,EACXC,OAAO,IAGTH,EAASI,cAAc,GACvBJ,EAASK,cAAc,SAAU,GACjCL,EAASM,QAAQtC,EAAO4B,YAAa5B,EAAO6B,cAC5C7B,EAAOuC,YAAYP,EAASQ,YAE5B,IAAIC,EAAS,WAEXT,EAASS,OAAOlB,EAAOG,EACzB,EAEIgB,EAAS,MAAUC,cACvBD,EAAOE,YAAc,GAErB,IAAQC,EAAGH,EAAOI,KAAKxB,EAAWmB,GAGlC,GAFAI,EAAKE,UAAYF,EAAKG,UAAYxB,EAAMyB,aAEpC7B,EAAO,CACT,MAAY,GACE,SAAH8B,IACTC,sBAAsBD,GAEtBE,IAGIA,EAAQ,GAAK,GAIjBpB,EAASS,OAAOlB,EAAOG,EACzB,CACAwB,IAEI9B,EAAQiC,SAASC,cAAc,UAC7BC,UAAW,EACjBnC,EAAMoC,MAAO,EACbpC,EAAMqC,OAAQ,EACdrC,EAAMsC,IAAMxD,EACZkB,EAAM0B,OAEN,IAAIa,EAASN,SAASC,cAAc,SACpCK,EAAOJ,UAAW,EAClBI,EAAOH,MAAO,EACdG,EAAOF,OAAQ,EACfE,EAAOD,IAAMvD,EACbwD,EAAOb,OAEP,IAAIc,EAAW,IAAIpC,EAAMqC,aAAazC,KACvB,IAASI,EAACqC,aAAaF,GACtCC,EAASb,UAAYe,EAASf,UAAYvB,EAAMyB,aAChDW,EAASZ,UAAYc,EAASd,UAAYxB,EAAMyB,aAEhDU,EAAOI,iBACL,aACA,WACEJ,EAAOK,QAEPF,EAAW,IAAStC,EAACqC,aAAaF,IACzBZ,UAAYvB,EAAMyB,aAC3Ba,EAASd,UAAYxB,EAAMyB,aAE3BgB,EAAIC,SAASJ,SAASK,MAAQL,CAChC,GACA,GAGF1C,EAAM2C,iBACJ,aACA,WACE3C,EAAM4C,QAENJ,EAAW,IAASpC,EAACqC,aAAazC,IAEzB2B,UAAYvB,EAAMyB,aAC3BW,EAASZ,UAAYxB,EAAMyB,aAE3BgB,EAAIC,SAASN,SAASO,MAAQP,CAChC,GACA,EAEJ,MACMA,EAAWlB,EAAOI,KAAK5C,EAAQuC,GAC/BqB,EAAWpB,EAAOI,KAAK3C,EAAQsC,GAEnCmB,EAASb,UAAYe,EAASf,UAAYvB,EAAMyB,aAChDW,EAASZ,UAAYc,EAASd,UAAYxB,EAAMyB,aAGlD,IAAMmB,EAAEC,EACR,IAAeC,EAAGlE,EACdJ,EAAO6B,aAAe7B,EAAO4B,YAAc0C,GAC7CF,EAAK,EACLC,EAAKrE,EAAO6B,aAAe7B,EAAO4B,YAAc0C,IAEhDF,EAAMpE,EAAO4B,YAAc5B,EAAO6B,aAAgByC,EAClDD,EAAK,GAGP,IAAOJ,EAAG,IAASzC,EAAC+C,eAAe,CACjCL,SAAU,CACR7D,WAAY,CACVmE,KAAM,IACNL,MAAO9D,GAETE,WAAY,CACViE,KAAM,IACNL,MAAO5D,GAETkE,WAAY,CACVD,KAAM,IACNL,MAAO,GAETvD,OAAQ,CACN4D,KAAM,IACNL,MAAOvD,GAETC,OAAQ,CACN2D,KAAM,IACNL,MAAOtD,GAET+C,SAAU,CACRY,KAAM,IACNL,MAAOP,GAETE,SAAU,CACRU,KAAM,IACNL,MAAOL,GAETjB,KAAM,CACJ2B,KAAM,IACNL,MAAOtB,GAET6B,IAAK,CACHF,KAAM,OACNL,MAAO,IAAS3C,EAACmD,QACf3E,EAAO4B,YACP5B,EAAO6B,aACPuC,EACAC,IAGJO,IAAK,CACHJ,KAAM,IACNL,MAAOU,OAAOC,mBAIlBC,aAvPY,oIAwPZC,eAhPc,o9BAiPdC,aAAa,EACbC,QAAS,IAGPC,EAAW,MAAUC,cACvBpF,EAAO4B,YACP5B,EAAO6B,aACP,GAEQwD,EAAG,IAAI7D,EAAM8D,KAAKH,EAAUlB,GAGtC,SAASsB,IACPC,EAAKC,GAAGxB,EAAIC,SAASO,WAAY,CAC/BiB,SAAU5E,EACVqD,MAAO,EACPwB,KAAMxE,EACNyE,SAAUnD,EACVoD,WAAYpD,GAEhB,CAEA,aACE+C,EAAKC,GAAGxB,EAAIC,SAASO,WAAY,CAC/BiB,SAAU1E,EACVmD,MAAO,EACPwB,KAAMxE,EACNyE,SAAUnD,EACVoD,WAAYpD,GAEhB,CApBAlB,EAAMuE,IAAIT,GAsBNpE,IACFjB,EAAO+D,iBAAiB,aAAcwB,GACtCvF,EAAO+D,iBAAiB,aAAcwB,GACtCvF,EAAO+D,iBAAiB,aAAcgC,GACtC/F,EAAO+D,iBAAiB,WAAYgC,IAGtClB,OAAOd,iBAAiB,SAAU,SAASiC,GACrChG,EAAO6B,aAAe7B,EAAO4B,YAAc0C,GAC7CF,EAAK,EACLC,EAAKrE,EAAO6B,aAAe7B,EAAO4B,YAAc0C,IAEhDF,EAAMpE,EAAO4B,YAAc5B,EAAO6B,aAAgByC,EAClDD,EAAK,GAEPgB,EAAOY,SAAS/B,SAASQ,IAAIP,MAAQ,IAAS3C,EAACmD,QAC7C3E,EAAO4B,YACP5B,EAAO6B,aACPuC,EACAC,GAEFrC,EAASM,QAAQtC,EAAO4B,YAAa5B,EAAO6B,cAE5CY,GACF,GAEAyD,KAAKC,KAAOZ,EACZW,KAAKE,SAAWL,CAClB"}